name: Continuous Integration

on: push

jobs:
  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Install dependencies
        run:
          npm ci --ignore-scripts --no-audit --prefer-offline --progress=false
      - name: Format
        run: npm run format
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Install dependencies
        run:
          npm ci --ignore-scripts --no-audit --prefer-offline --progress=false
      - name: Lint
        run: npm run lint
  spellcheck:
    name: Spellcheck
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Install dependencies
        run:
          npm ci --ignore-scripts --no-audit --prefer-offline --progress=false
      - name: Spellcheck
        run: npm run spellcheck
  test:
    name: Test
    runs-on: ubuntu-latest
    # TODO: Fix mongo container connectivity issue.
    # services:
    #   mongodb:
    #     image: mongo:latest
    #     volumes:
    #       - mongodb_data_container:/data/db
    #     ports:
    #       - 27017:27017
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Create env file
        run: |
          cat > .env << EOF
          MONGODB_CONNECTION_STRING=${{ secrets.MONGODB_CONNECTION_STRING_TEST }}
          EOF
          printenv
      - name: Install dependencies
        run:
          npm ci --ignore-scripts --no-audit --prefer-offline --progress=false
      # - name: Test
      #   env:
      #     MONGODB_CONNECTION_STRING:
      #       ${{ secrets.MONGODB_CONNECTION_STRING_TEST }}
      #   run: npm run test:ci
      - name: Test
        env:
          MONGODB_CONNECTION_STRING:
            ${{ secrets.MONGODB_CONNECTION_STRING_TEST }}
        run: MONGODB_CONNECTION_STRING=${MONGODB_CONNECTION_STRING} npm run test
  types:
    name: Types
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Install dependencies
        run:
          npm ci --ignore-scripts --no-audit --prefer-offline --progress=false
      - name: Types
        run: npm run types
